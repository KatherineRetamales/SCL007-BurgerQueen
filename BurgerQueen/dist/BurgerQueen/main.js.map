{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/orders/orders.component.css","webpack:///./src/app/components/orders/orders.component.html","webpack:///./src/app/components/orders/orders.component.ts","webpack:///./src/app/components/products/products.component.css","webpack:///./src/app/components/products/products.component.html","webpack:///./src/app/components/products/products.component.ts","webpack:///./src/app/services/clients.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-0 h1\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/_\\\">{{title}}</a>\\n</nav>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-md-8\\\">\\n          <app-products></app-products>\\n      </div>\\n      <div class=\\\"col-xs-6 col-md-4\\\">\\n        <app-orders></app-orders>\\n      </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Burger Queen';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport {ClientsService} from './services/clients.service';\n\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { OrdersComponent } from './components/orders/orders.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClientsComponent,\n    ProductsComponent,\n    OrdersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    FormsModule\n  ],\n  providers: [ClientsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy9jbGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form (ngSubmit)=\\\"saveClient()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Cliente</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Ingrese nombre del cliente\\\" name=\\\"name\\\" [(ngModel)]=\\\"item.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-dark mb-3\\\" type=\\\"submit\\\">Guardar</button>\\n    </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport {ClientsService} from '../../services/clients.service'\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n  item: any = {\n    name:\"\"\n  }\n  constructor(private service : ClientsService) { }\n\n  ngOnInit() {\n  }\n  saveClient(){\n    this.service.addItem(this.item);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvb3JkZXJzL29yZGVycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ul>\\n  <li *ngFor=\\\"let item of items\\\">\\n    {{item.id}}--{{ item.name }}//Producto:{{item.products[0].id}}\\n    ///{{item.products[0].order}} ${{item.products[0].price}}\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ClientsService} from '../../services/clients.service';\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  items:any;\n\n  constructor(private service: ClientsService) { \n    this.service.listClient().subscribe(item =>{\n      this.items= item;\n      console.log(item);\n      \n    });\n  }\n    \n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<button class=\\\"btn btn-warning mt-3 mb-3 mr-3\\\" (click)=\\\"show = 'breakfast'\\\">Desayuno</button>\\n<button class=\\\"btn btn-warning mt-3 mb-3 mr-3\\\" (click)=\\\"show = 'lunch'\\\">Almuerzo y cena</button>\\n\\n\\n<form (ngSubmit)=\\\"add()\\\">\\n  <input type=\\\"text\\\" placeholder=\\\"Nombre Cliente\\\" name=\\\"name\\\" class=\\\"form-control mt-3\\\" [(ngModel)]=\\\"item.name\\\">\\n  <table class=\\\"table table-dark d-none\\\" [ngClass]=\\\"{ 'd-block': show == 'breakfast' }\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Codigo</th>\\n        <th scope=\\\"col\\\">Items</th>\\n        <th scope=\\\"col\\\">Precio</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let breakfast of breakfastMenu;\\\">\\n        <th scope=\\\"row\\\">{{breakfast.id}}</th>\\n        <td>{{breakfast.order}}</td>\\n        <td>${{breakfast.price}}</td>\\n        <td>\\n        <td><button class=\\\"btn btn-dark\\\" type=\\\"button\\\" (click)=\\\"ArrayLunch(breakfast)\\\"><i class=\\\"fas fa-plus-circle\\\"></i></button></td>\\n      </tr>\\n      <tr>\\n        <td>\\n          <button class=\\\"btn btn-warning mt-3 mb-3\\\" type=\\\"submit\\\">Agregar pedido</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <table class=\\\"table table-dark d-none\\\" [ngClass]=\\\"{ 'd-block': show == 'lunch' }\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Codigo</th>\\n        <th scope=\\\"col\\\">Items</th>\\n        <th scope=\\\"col\\\">Precio</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let lunch of lunchMenu;\\\">\\n        <th scope=\\\"row\\\">{{lunch.id}}</th>\\n        <td>{{lunch.order}}</td>\\n        <td>${{lunch.price}}</td>\\n        <td>\\n        <td><button class=\\\"btn btn-dark\\\" type=\\\"button\\\" (click)=\\\"ArrayLunch(lunch)\\\"><i class=\\\"fas fa-plus-circle\\\"></i></button></td>\\n      </tr>\\n      <tr>\\n        <td>\\n          <button class=\\\"btn btn-warning mt-3 mb-3\\\" type=\\\"submit\\\">Agregar pedido</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ClientsService} from '../../services/clients.service'\n\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\n\nexport class ProductsComponent implements OnInit {\n\n  breakfastMenu : Array<any> =[\n    { id: 'CL', order: 'Cafe con leche', price: 700 },\n    { id: 'CA', order: 'Cafe americano', price: 500 },\n    { id: 'JN', order: 'Jugo natural', price: 700 },\n    { id: 'SJQ', order: 'Sandwich de jamon y queso', price: 1000 }\n  ];\n  lunchMenu :Array<any> = [\n    { id: 'HS', order: 'Hamburgueza simple', price: 1500 },\n    { id: 'HD', order: 'Hamburgueza doble', price: 2500 },\n    { id: 'PF', order: 'Papas fritas', price: 500 },\n    { id: 'OR', order: 'Onion rings', price: 500 },\n    { id: 'AC', order: 'Agua 500ml', price: 500 },\n    { id: 'AG', order: 'Agua 750ml', price: 750 },\n    { id: 'GC', order: 'Gaseosa 500ml', price: 700 },\n    { id: 'GA', order: 'Gaseosa 750ml', price: 1000 },\n  ]\n\n  item: any = {\n    name: '',\n    products: []\n  }\n\n  constructor(private service:ClientsService) { }\n\n  ngOnInit() {\n  }\n\n  add() {\n    this.service.addItem(this.item);\n    this.item.name = '';\n\n  }\n  ArrayLunch(value: any) {\n    (this.item.products).push(value);\n    console.log(this.item.products);   \n  }\n\n\n  \n  \n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Item { name: string; products:string}\n\n@Injectable({providedIn:'root'})\nexport class ClientsService {\n\n  private itemsCollection: AngularFirestoreCollection<Item>;\n  items: Observable<Item[]>;\n\n  constructor(private firebase: AngularFirestore) { \n    this.itemsCollection = firebase.collection<Item>('clients');\n    this.items = this.itemsCollection.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Item;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    );\n  }\n\n  listClient() {\n    return this.items;\n  }\n\n  addItem(item: Item) {\n    this.itemsCollection.add(item);\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDvqTtA6pCDM-pzfmzGUtPlgNi7_4MtiSI\",\n    authDomain: \"burgerqueen-2b299.firebaseapp.com\",\n    databaseURL: \"https://burgerqueen-2b299.firebaseio.com\",\n    projectId: \"burgerqueen-2b299\",\n    storageBucket: \"burgerqueen-2b299.appspot.com\",\n    messagingSenderId: \"202918577928\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}